export const id=34166;export const ids=[34166];export const modules={4940:(e,i,a)=>{a.d(i,{JW:()=>f,OW:()=>_,PO:()=>l,VN:()=>d,XG:()=>r,eB:()=>h,gZ:()=>v,hM:()=>c,k2:()=>o,lU:()=>p,nc:()=>m,vX:()=>u,z1:()=>n});var t=a(28825),s=a(1169);let n=function(e){return e.THREAD="thread",e.WIFI="wifi",e.ETHERNET="ethernet",e.UNKNOWN="unknown",e}({});const o=e=>{var i;return null===(i=e.auth.external)||void 0===i?void 0:i.config.canCommissionMatter},d=e=>e.auth.external.fireMessage({type:"matter/commission"}),c=(e,i)=>{let a;const n=(0,s.Ag)(e.connection,(e=>{if(!a)return void(a=new Set(Object.values(e).filter((e=>e.identifiers.find((e=>"matter"===e[0])))).map((e=>e.id))));const s=Object.values(e).filter((e=>e.identifiers.find((e=>"matter"===e[0]))&&!a.has(e.id)));s.length&&(n(),a=void 0,null==i||i(),(0,t.o)(`/config/devices/device/${s[0].id}`))}));return()=>{n(),a=void 0}},l=(e,i)=>e.callWS({type:"matter/commission",code:i}),r=(e,i)=>e.callWS({type:"matter/commission_on_network",pin:i}),p=(e,i,a)=>e.callWS({type:"matter/set_wifi_credentials",network_name:i,password:a}),v=(e,i)=>e.callWS({type:"matter/set_thread",thread_operation_dataset:i}),h=(e,i)=>e.callWS({type:"matter/node_diagnostics",device_id:i}),_=(e,i)=>e.callWS({type:"matter/ping_node",device_id:i}),m=(e,i)=>e.callWS({type:"matter/open_commissioning_window",device_id:i}),u=(e,i,a)=>e.callWS({type:"matter/remove_matter_fabric",device_id:i,fabric_index:a}),f=(e,i)=>e.callWS({type:"matter/interview_node",device_id:i})},34166:(e,i,a)=>{a.r(i),a.d(i,{HaDeviceInfoMatter:()=>p});var t=a(62659),s=a(76504),n=a(80792),o=a(40924),d=a(18791),c=(a(14109),a(4940)),l=(a(29805),a(39335),a(94027)),r=a(14126);let p=(0,t.A)([(0,d.EM)("ha-device-info-matter")],(function(e,i){class a extends i{constructor(...i){super(...i),e(this)}}return{F:a,d:[{kind:"field",decorators:[(0,d.MZ)({attribute:!1})],key:"hass",value:void 0},{kind:"field",decorators:[(0,d.MZ)({attribute:!1})],key:"device",value:void 0},{kind:"field",decorators:[(0,d.wk)()],key:"_nodeDiagnostics",value:void 0},{kind:"method",key:"willUpdate",value:function(e){(0,s.A)((0,n.A)(a.prototype),"willUpdate",this).call(this,e),e.has("device")&&this._fetchNodeDetails()}},{kind:"method",key:"_fetchNodeDetails",value:async function(){if(this.device&&null===this.device.via_device_id)try{this._nodeDiagnostics=await(0,c.eB)(this.hass,this.device.id)}catch(e){this._nodeDiagnostics=void 0}}},{kind:"method",key:"render",value:function(){return this._nodeDiagnostics?o.qy` <ha-expansion-panel .header="${this.hass.localize("ui.panel.config.matter.device_info.device_info")}"> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.node_id")}:</span> <span class="value">${this._nodeDiagnostics.node_id}</span> </div> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.network_type")}:</span> <span class="value">${this.hass.localize(`ui.panel.config.matter.network_type.${this._nodeDiagnostics.network_type}`)}</span> </div> <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.node_type")}:</span> <span class="value">${this.hass.localize(`ui.panel.config.matter.node_type.${this._nodeDiagnostics.node_type}`)}</span> </div> ${this._nodeDiagnostics.network_name?o.qy` <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.network_name")}:</span> <span class="value">${this._nodeDiagnostics.network_name}</span> </div> `:o.s6} ${this._nodeDiagnostics.mac_address?o.qy` <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.mac_address")}:</span> <span class="value">${this._nodeDiagnostics.mac_address}</span> </div> `:o.s6} <div class="row"> <span class="name">${this.hass.localize("ui.panel.config.matter.device_info.ip_adresses")}:</span> <span class="value">${this._nodeDiagnostics.ip_adresses.map((e=>o.qy`${e}<br>`))}</span> </div> </ha-expansion-panel> `:o.s6}},{kind:"get",static:!0,key:"styles",value:function(){return[r.RF,o.AH`h4{margin-bottom:4px}div{word-break:break-all;margin-top:2px}.row{display:flex;justify-content:space-between;padding-bottom:4px}.value{text-align:right}ha-expansion-panel{margin:8px -16px 0;--expansion-panel-summary-padding:0 16px;--expansion-panel-content-padding:0 16px;--ha-card-border-radius:0px}`]}}]}}),(0,l.E)(o.WF))}};
//# sourceMappingURL=34166.xMUsFq8c7Ps.js.map